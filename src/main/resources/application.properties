# Database
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url = jdbc:mysql://192.168.0.108:3306/lms?verifyServerCertificate=false&useSSL=true
#spring.datasource.url = jdbc:mysql://localhost/activiti_fresh

#spring.datasource.url = jdbc:mysql://localhost/card_retail
#spring.datasource.url = jdbc:mysql://localhost/presentationNew



#spring.datasource.url = jdbc:mysql://192.168.0.47/activiti?verifyServerCertificate=false&useSSL=true

#This database is for testing
#spring.datasource.url = jdbc:mysql://192.168.0.47/testlms?verifyServerCertificate=false&useSSL=true
#spring.datasource.url = jdbc:mysql://192.168.0.108:3306/testlms?verifyServerCertificate=false&useSSL=true


#=======================
# DB Username and Password
#=======================

######### IP : 192.168.0.47 ##########
#-------------------------------------
#spring.datasource.url = jdbc:mysql://192.168.0.47/card_retail_corporate?verifyServerCertificate=false&useSSL=true
#spring.datasource.username = root
#spring.datasource.password = Java@321


######### IP : 192.168.0.108 ##########
#--------------------------------------
#spring.datasource.url = jdbc:mysql://192.168.0.108:3306/testlms?verifyServerCertificate=false&useSSL=true
#spring.datasource.username = root
#spring.datasource.password = java@321

######### IP : 127.0.0.1 ##############
#--------------------------------------
#spring.datasource.url = jdbc:mysql://localhost/presentation-scb
spring.datasource.url = jdbc:mysql://localhost/doc
spring.datasource.username = root
spring.datasource.password = 

spring.datasource.testWhileIdle = true
#.testWhileIdle = true

# Hibernate

hibernate.hbm2ddl.auto=update
#spring.jpa.hibernate.ddl-auto= update
spring.jpa.properties.hibernate.generate_statistics = true
#show or not(false) sql query in log
spring.jpa.show-sql = true

# Naming strategy
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

entitymanager.packagesToScan=com.csinfotechbd

#Resource permission
spring.resources.chain.enabled: true
#hibernate.id.new_generator_mappings=false

# ===============================
# = HIBERNATE SEARCH
# ===============================

# Spring Data JPA will take any properties under spring.jpa.properties.* and 
# pass them along (with the prefix stripped) once 11the EntityManagerFactory is 
# created.

# Specify the DirectoryProvider to use (the Lucene Directory)
#spring.jpa.properties.hibernate.search.default.directory_provider = filesystem

# Using the filesystem DirectoryProvider you also have to specify the default
# base directory for all indexes (make sure that the application have write
# permissions on such directory)
#spring.jpa.properties.hibernate.search.default.indexBase = /var/lucene/indexes/
#/var/lucene/indexes/

# ===============================
# = LOGGING
# ===============================
logging.level.org.springframework.web=DEBUG
logging.level.com.csinfotechbd=DEBUG
logging.level.org.hibernate=ERROR
logging.level.org.hibernate.SQL=debug
logging.file=los.log
logging.level.org.hibernate.stat=DEBUG
#messages configuration
spring.messages.basename=messages
spring.messages.encoding=UTF-8


# ===============================
# = Image Configuration
# ===============================
image.location =C:\\extras\\images
spring.http.multipart.max-file-size=3MB
spring.http.multipart.max-request-size=3MB

# ===============================
# = THYMELEAF
# ===============================
spring.thymeleaf.cache = false

# ===============================
# = TOMCAT CONFIGURATION
# ===============================
server.tomcat.max-threads=5000
server.tomcat.accept-count=2000